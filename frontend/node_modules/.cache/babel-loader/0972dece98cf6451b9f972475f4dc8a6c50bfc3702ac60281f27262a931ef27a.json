{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PULSE Electronics\\\\OneDrive\\\\Desktop\\\\Lab2_E-commerce\\\\frontend\\\\src\\\\screens\\\\ContactScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Form, Button, Row, FormGroup, FormLabel } from \"react-bootstrap\";\nimport FormContainer from \"../components/FormContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactScreen = _ref => {\n  _s();\n  let {\n    history\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const contactData = {\n      name: name,\n      email: email,\n      message: text\n    };\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setError(\"You must be logged in to submit the form.\");\n      return; // Prevent form submission if no token\n    }\n\n    try {\n      const response = await fetch('/api/contacts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': token ? `Bearer ${token}` : ''\n        },\n        body: JSON.stringify(contactData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.message || 'Error submitting form');\n      }\n      setName('');\n      setEmail('');\n      setText('');\n      setSuccessMessage('Your contact form submitted successfully!');\n      setError('');\n    } catch (error) {\n      console.error('Error submitting form:', error.message);\n      setError(error.message);\n      setSuccessMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        controlId: \"text\",\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          placeholder: \"Enter Message\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactScreen, \"LdbbjSaTIJ1o9K2XdcmffEBB1Dw=\");\n_c = ContactScreen;\nexport default ContactScreen;\nvar _c;\n$RefreshReg$(_c, \"ContactScreen\");","map":{"version":3,"names":["React","useState","Form","Button","Row","FormGroup","FormLabel","FormContainer","jsxDEV","_jsxDEV","ContactScreen","_ref","_s","history","name","setName","email","setEmail","text","setText","error","setError","successMessage","setSuccessMessage","handleSubmit","event","preventDefault","contactData","message","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","controlId","Control","type","placeholder","value","onChange","e","target","as","variant","className","_c","$RefreshReg$"],"sources":["C:/Users/PULSE Electronics/OneDrive/Desktop/Lab2_E-commerce/frontend/src/screens/ContactScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button, Row, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\nconst ContactScreen = ({ history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [error, setError] = useState(\"\"); \r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const contactData = {\r\n      name: name, \r\n      email: email,\r\n      message: text, \r\n    };\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n    setError(\"You must be logged in to submit the form.\");\r\n    return; // Prevent form submission if no token\r\n  }\r\n    try {\r\n      const response = await fetch('/api/contacts', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': token ? `Bearer ${token}` : '', \r\n        },\r\n        body: JSON.stringify(contactData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json(); \r\n        throw new Error(errorData.message || 'Error submitting form'); \r\n      }\r\n\r\n      \r\n      setName('');\r\n      setEmail('');\r\n      setText('');\r\n      setSuccessMessage('Your contact form submitted successfully!');\r\n      setError(''); \r\n    } catch (error) {\r\n      console.error('Error submitting form:', error.message); \r\n      setError(error.message); \r\n      setSuccessMessage(''); \r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Contact Us</h1>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>} \r\n      {successMessage && <p style={{ color: \"green\" }}>{successMessage}</p>}\r\n      <Form onSubmit={handleSubmit}>\r\n        <FormGroup controlId=\"name\">\r\n          <FormLabel>Name</FormLabel>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <br />\r\n        <FormGroup controlId=\"email\">\r\n          <FormLabel>Email</FormLabel>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <br />\r\n        <FormGroup controlId=\"text\">\r\n          <FormLabel>Message</FormLabel>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder=\"Enter Message\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </FormGroup>\r\n        <br />\r\n        <Button type=\"submit\" variant=\"primary\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <Row className=\"py-3\"></Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ContactScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}