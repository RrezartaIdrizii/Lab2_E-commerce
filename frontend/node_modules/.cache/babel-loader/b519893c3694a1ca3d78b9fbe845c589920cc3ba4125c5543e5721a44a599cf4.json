{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arbid\\\\OneDrive\\\\Desktop\\\\InfiniteTech\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Card, Button, ListGroupItem } from 'react-bootstrap';\nimport products from '../products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductScreen = _ref => {\n  let {\n    match\n  } = _ref;\n  const product = products.find(p => p._id === match.params.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn-btn-lgiht my-3\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n_c = ProductScreen;\nexport default ProductScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["React","Link","Row","Col","Image","ListGroup","Card","Button","ListGroupItem","products","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductScreen","_ref","match","product","find","p","_id","params","id","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","md","src","image","alt","name","fluid","variant","_c","$RefreshReg$"],"sources":["C:/Users/arbid/OneDrive/Desktop/InfiniteTech/frontend/src/screens/ProductScreen.js"],"sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Row, Col, Image, ListGroup, Card, Button, ListGroupItem} from 'react-bootstrap'\r\nimport products from '../products'\r\n\r\nconst ProductScreen = ({match}) => {\r\n  const product = products.find((p) => p._id === match.params.id)\r\n  \r\n  return <>\r\n  <Link className='btn-btn-lgiht my-3' to='/'>\r\n    Go Back\r\n  </Link>\r\n  <Row>\r\n    <Col md={6}>\r\n      <Image src={product.image} alt={product.name} fluid/>\r\n    </Col>\r\n    <Col md={3}>\r\n    <ListGroup variant='flush'>\r\n    <ListGroupItem>\r\n      <h3>{product.name}</h3>\r\n    </ListGroupItem>\r\n    </ListGroup>\r\n    </Col>\r\n  </Row>\r\n  </>\r\n}\r\n\r\nexport default ProductScreen"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAO,kBAAkB;AACrC,SAAQC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAEC,IAAI,EAAEC,MAAM,EAAEC,aAAa,QAAO,iBAAiB;AACvF,OAAOC,QAAQ,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,aAAa,GAAGC,IAAA,IAAa;EAAA,IAAZ;IAACC;EAAK,CAAC,GAAAD,IAAA;EAC5B,MAAME,OAAO,GAAGR,QAAQ,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKJ,KAAK,CAACK,MAAM,CAACC,EAAE,CAAC;EAE/D,oBAAOX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACPZ,OAAA,CAACV,IAAI;MAACuB,SAAS,EAAC,oBAAoB;MAACC,EAAE,EAAC,GAAG;MAAAF,QAAA,EAAC;IAE5C;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACPlB,OAAA,CAACT,GAAG;MAAAqB,QAAA,gBACFZ,OAAA,CAACR,GAAG;QAAC2B,EAAE,EAAE,CAAE;QAAAP,QAAA,eACTZ,OAAA,CAACP,KAAK;UAAC2B,GAAG,EAAEd,OAAO,CAACe,KAAM;UAACC,GAAG,EAAEhB,OAAO,CAACiB,IAAK;UAACC,KAAK;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNlB,OAAA,CAACR,GAAG;QAAC2B,EAAE,EAAE,CAAE;QAAAP,QAAA,eACXZ,OAAA,CAACN,SAAS;UAAC+B,OAAO,EAAC,OAAO;UAAAb,QAAA,eAC1BZ,OAAA,CAACH,aAAa;YAAAe,QAAA,eACZZ,OAAA;cAAAY,QAAA,EAAKN,OAAO,CAACiB;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACJ,CAAC;AACL,CAAC;AAAAQ,EAAA,GApBKvB,aAAa;AAsBnB,eAAeA,aAAa;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}